wmbeInit
* return graphmodel? with alg specialization: gm.Alg.name='WMB'
  wmb.nodes(n).clique, potential, parent, children, weight  (+list of incl factors? & fraction?)
  wmb.minibucket(i).var, nodes, matchings
    if not a graphmodel, include wmb.factors (+ node / list of nodes assigned?)
  wmb.options.xxx

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

wmbeFwd: just do standard forward pass? don't compute beliefs at all?

wmbeBwd: compute belief of each node & then upward messages 

wmbeBelief: do the belief part of the computation without matching & store factor beliefs
  (way to access more general beliefs?)
  (way to access cliques, etc?)

(fwd & bwd pass: compute beliefs of original factors? during match op?) 


wmbeAddClique:  insert clique into MB structure
  find first eliminated variable & add to that minibucket
  add all reductions of the clique to their minibuckets; stop when subsumed by some clique
  run through all added cliques & see if they subsume existing cliques & merge
    [ nVacant, nnVacant ]

private f'ns?
  wmbeUpdateTheta( minibucket(i) )  : need & update beliefs, theta
  wmbeUpdateWeight( minibucket(i) ) :  "", weights  
  



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

wmbeFwd( +match +wts)


wmbeRun( fwd, bwd, match, wts, etc??? )

wmbeMerge?

wmbeBeliefs

wmbeSetOptions(gm, 'option', value, 'option', value ...)
  % one option: "matchings" { { i1 , list_i1 }, { i2 , list_i2 } ... }

